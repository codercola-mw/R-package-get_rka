get_stamenmap(us, zoom = 5, maptype = "toner-lite") %>% ggmap()
us <- c(left = -125, bottom = 25.75, right = -67, top = 49)
us
get_stamenmap(us, zoom = 5, maptype = "toner-lite") %>% ggmap()
library("dplyr")
library("forcats")
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
library("forcasts")
library("forcast")
library(forcast)
library(forcasts)
library(forecast)
library("forecast")
library("forecasts")
install.packages('forecast', dependencies = TRUE)
library("forecast")
install.packages('forcars', dependencies = TRUE)
install.packages('forcats', dependencies = TRUE)
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
library("forcats")
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
qmplot(lon, lat, data = violent_crimes, maptype = "toner-lite", color = I("red"))
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("rape"))
)
qmplot(lon, lat, data = violent_crimes, maptype = "toner-lite", color = I("red"))
crime
head(crime)
head(offense)
head(crime$offense)
crime$offense
summary(crime$offense)
46556/365
7177/365
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary", "robbery", "aggravated assault", "rape"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("murder"))
)
qmplot(lon, lat, data = violent_crimes, maptype = "toner-lite", color = I("red"))
robberies <- violent_crimes %>% filter(offense == "robbery")
qmplot(lon, lat, data = violent_crimes, geom = "blank",
zoom = 14, maptype = "toner-background", darken = .7, legend = "topleft"
) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 650)
robberies <- violent_crimes %>% filter(offense == "robbery")
qmplot(lon, lat, data = violent_crimes, geom = "blank",
zoom = 10, maptype = "toner-background", darken = .7, legend = "topleft"
) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 650)
2
robberies <- violent_crimes %>% filter(offense == "robbery")
qmplot(lon, lat, data = violent_crimes, geom = "blank",
zoom = 2, maptype = "toner-background", darken = .7, legend = "topleft"
) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 650)
robberies <- violent_crimes %>% filter(offense == "robbery")
qmplot(lon, lat, data = violent_crimes, geom = "blank",
zoom = 25, maptype = "toner-background", darken = .7, legend = "topleft"
) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 650)
robberies <- violent_crimes %>% filter(offense == "robbery")
qmplot(lon, lat, data = violent_crimes, geom = "blank",
zoom = 10, maptype = "toner-background", darken = .7, legend = "topleft"
) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 650)
robberies <- violent_crimes %>% filter(offense == "robbery")
qmplot(lon, lat, data = violent_crimes, geom = "blank",
zoom = 25, maptype = "toner-background", darken = .7, legend = "topleft"
) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 650)
robberies <- violent_crimes %>% filter(offense == "robbery")
qmplot(lon, lat, data = violent_crimes, geom = "blank",
zoom = 18, maptype = "toner-background", darken = .7, legend = "topleft"
) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 650)
robberies <- violent_crimes %>% filter(offense == "robbery")
qmplot(lon, lat, data = violent_crimes, geom = "blank",
zoom = 0, maptype = "toner-background", darken = .7, legend = "topleft"
) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 650)
robberies <- violent_crimes %>% filter(offense == "robbery")
qmplot(lon, lat, data = violent_crimes, geom = "blank",
zoom = 1, maptype = "toner-background", darken = .7, legend = "topleft"
) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 650)
robberies <- violent_crimes %>% filter(offense == "robbery")
qmplot(lon, lat, data = violent_crimes, geom = "blank",
zoom = 4, maptype = "toner-background", darken = .7, legend = "topleft"
) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 650)
robberies <- violent_crimes %>% filter(offense == "robbery")
qmplot(lon, lat, data = violent_crimes, geom = "blank",
zoom = 7, maptype = "toner-background", darken = .7, legend = "topleft"
) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", alpha = .3, color = NA) +
scale_fill_gradient2("Robbery\nPropensity", low = "white", mid = "yellow", high = "red", midpoint = 650)
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in downtown houston
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-300 <= lon & lon <= -300,
100 <= lat & lat <=  100
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in downtown houston
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-300 <= lon & lon <= -300,
100 <= lat & lat <=  100
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary", "robbery", "aggravated assault", "rape"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("murder"))
)
qmplot(lon, lat, data = violent_crimes, maptype = "toner-lite", color = I("red"))
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-122.431297 <= lon & lon <= -122.431297,
37.773972 <= lat & lat <=  37.773972
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-122.431297 <= lon & lon <= -122.431297,
37.773972 <= lat & lat <=  37.773972
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
qmplot(lon, lat, data = violent_crimes, maptype = "toner-lite", color = I("red"))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-122.431297 <= lon & lon <= -122.431297,
37.773972 <= lat & lat <=  37.773972
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary")
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
qmplot(-122.431297, 37.773972, data = violent_crimes, maptype = "toner-lite", color = I("red"))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-122.431297 <= lon & lon <= -122.431297,
37.773972 <= lat & lat <=  37.773972
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
qmplot(lon, lat, data = violent_crimes, maptype = "toner-lite", color = I("red"))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-122.431297 <= lon & lon <= -122.431297,
37.773972 <= lat & lat <=  37.773972
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in downtown houston
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
qmplot(lon, lat, data = violent_crimes, maptype = "toner-lite", color = I("red"))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-122.431297 <= lon & lon <= -122.431297,
37.773972 <= lat & lat <=  37.773972
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
qmplot(lon, lat, data = violent_crimes, maptype = "toner-lite", color = I("red"))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-122.431297 <= lon & lon <= -122.431297,
37.773972 <= lat & lat <=  37.773972
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
return(qmplot(lon, lat, data = violent_crimes, maptype = "toner-lite", color = I("red")))
?qmplot
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-122.431297 <= lon & lon <= -122.431297,
37.773972 <= lat & lat <=  37.773972
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
return(qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red")))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(offense %notin% c("auto theft", "theft", "burglary"), -122.431297 <= lon & lon <= -122.431297, 37.773972 <= lat & lat <=  37.773972) %>%
mutate(offense = fct_drop(offense), offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder")))
# use qmplot to make a scatterplot on a map
return(qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red")))
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>% ;
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(offense %notin% c("auto theft", "theft", "burglary"), -122.431297 <= lon & lon <= -122.431297, 37.773972 <= lat & lat <=  37.773972) %>% ;
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(offense %notin% c("auto theft", "theft", "burglary"), -122.431297 <= lon & lon <= -122.431297, 37.773972 <= lat & lat <=  37.773972) %>%
mutate(offense = fct_drop(offense), offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder")))
us <- c(left = -125, bottom = 25.75, right = -67, top = 49)
us <- c(left = -125, bottom = 25.75, right = -67, top = 49)
get_stamenmap(us, zoom = 5, maptype = "toner-lite") %>% ggmap()
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(offense %notin% c("auto theft", "theft", "burglary"), -122.431297 <= lon & lon <= -122.431297, 37.773972 <= lat & lat <=  37.773972) %>%
mutate(offense = fct_drop(offense), offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder")))
# use qmplot to make a scatterplot on a map
return(qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red")))
summary(crime)
?crime
crime$offense
summary(crime$offense)
46556 / (6*30)
157 / (6*30)
violent_crimes <- crime %>%
filter(offense %notin% c("auto theft", "theft", "burglary"), -122.431297 <= lon & lon <= -122.431297, 37.773972 <= lat & lat <=  37.773972) %>%
mutate(offense = fct_drop(offense), offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder")))
# use qmplot to make a scatterplot on a map
return(qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red")))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(offense %notin% c("auto theft", "theft", "burglary"), -122.431297 <= lon & lon <= -122.431297, 37.773972 <= lat & lat <=  37.773972) %>%
mutate(offense = fct_drop(offense), offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder")))
# use qmplot to make a scatterplot on a map
return(qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red")))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
violent_crimes <- crime %>%
filter(offense %notin% c("auto theft", "theft", "burglary"), -122.431297 <= lon & lon <= -122.431297, 37.773972 <= lat & lat <=  37.773972) %>%
mutate(offense = fct_drop(offense), offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder")))
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# us
return(qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red")))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
return(qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red")))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red"))
us <- c(left = -125, bottom = 25.75, right = -67, top = 49)
get_stamenmap(us, zoom = 5, maptype = "toner-lite") %>% ggmap()
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red"))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red"))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.4 <= lon & lon <= -95.4,
29.73631 <= lat & lat <=  29.78400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red"))
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.33188,
29.73631 <= lat & lat <=  29.79400
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red"))
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.342,
29.73631 <= lat & lat <=  29.78450
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red"))
`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)
# reduce crime to violent crimes in San Francisco
violent_crimes <- crime %>%
filter(
offense %notin% c("auto theft", "theft", "burglary"),
-95.39681 <= lon & lon <= -95.342,
29.73631 <= lat & lat <=  29.78450
) %>%
mutate(
offense = fct_drop(offense),
offense = fct_relevel(offense, c("robbery", "aggravated assault", "rape", "murder"))
)
# use qmplot to make a scatterplot on a map
qmplot(lon, lat, data = violent_crimes, zoom = 14, maptype = "toner-lite", color = I("red"))
1
2
3
4
5
6
7
8
height <- max(Sacramento$latitude) - min(Sacramento$latitude)
width <- max(Sacramento$longitude) - min(Sacramento$longitude)
sac_borders <- c(bottom  = min(Sacramento$latitude)  - 0.1 * height,
top     = max(Sacramento$latitude)  + 0.1 * height,
left    = min(Sacramento$longitude) - 0.1 * width,
right   = max(Sacramento$longitude) + 0.1 * width)
map <- get_stamenmap(sac_borders, zoom = 10, maptype = "toner-lite")
height <- max(Sacramento$latitude) - min(Sacramento$latitude)
data("gas")
summary(gas)
head(gas)
ggplot(gas)
gas
data(Sacramento)
library(caret)
library("caret")
library(caret)
?ggplot
?ggmap
library(webapi)
library(webapi)
library(webapi)
